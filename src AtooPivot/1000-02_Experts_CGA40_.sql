SET NOCOUNT ON
--I] Mise en place tables de travail
--	A] SUPPRESSION DES TABLES TEMPORAIRES

-- supprime table temporaire bureaux
if object_id('tempdb..#EXPERTS_TEMP') is not null
DROP table #EXPERTS_TEMP

-- supprime table temporaire adresses
if object_id('tempdb..#PERSONNES_TEMP') is not null
DROP table #PERSONNES_TEMP

-- création table temporaire bureaux
select *  
into #EXPERTS_TEMP
from AtooCGA40..EXPERTS

-- création table temporaire adresses

select * 
into #PERSONNES_TEMP
from AtooCGA40..PERSONNES

-- création colonne provenance données cabinet comptable

ALTER TABLE #EXPERTS_TEMP ADD is_AtooCGA40 bit not null default 0
--ALTER TABLE #EXPERTS_TEMP ADD ID_EXP_OLD bigint null

-- création colonne provenance données cabinet comptable

ALTER TABLE #PERSONNES_TEMP ADD is_AtooCGA40 bit not null default 0



--	E] DECLARATION VARIABLE

-- EXPERTS

declare @CUR_ID_EXPERT bigint
declare @CUR_ID_PERSONNE bigint
declare @CUR_NUMERO_OEC varchar(30)
declare @CUR_DATE_INSCRIPTION_ORDRE smalldatetime
declare @CUR_DATE_RADIATION_ORDRE smalldatetime
declare @CUR_OBSERVATION varchar(2000)
declare @CUR_ID_CASIER int
declare @CUR_ID_TIERS_CLIENT bigint
declare @CUR_ID_TIERS_FOURNISSEUR bigint
declare @CUR_ID_STATUT_EXP tinyint
declare @CUR_HORODATAGE datetime
declare @CUR_SYNCHRO_ID uniqueidentifier
declare @CUR_DATE_ENTREE smalldatetime
declare @CUR_DATE_SORTIE smalldatetime

--PERSONNES

declare @CUR_ID_TITRE int
declare @CUR_RAISON_SOCIALE varchar(50)
declare @CUR_NOM varchar(40)
declare @CUR_PRENOM varchar(40)
declare @CUR_TELEPHONE_FIXE_PERSO varchar(18)
declare @CUR_TELEPHONE_MOBILE_PERSO varchar(18)
declare @CUR_TELEPHONE_FAX_PERSO varchar(18)
declare @CUR_EMAIL_PERSO varchar(100)
declare @CUR_TYPE_PERSONNE int
declare @CUR_ID_ADRESSE_PERSO bigint
declare @CUR_DATE_NAISSANCE smalldatetime
declare @CUR_SITE_WEB varchar(100)
declare @CUR_LOGIN_CGA varchar(15)
declare @CUR_PASSWORD_CGA varchar(15)
declare @CUR_TELEPHONE_ALTERNATIVE_PERSO varchar(18)
declare @CUR_NOM_JEUNE_FILLE varchar (40)
declare @CUR_MUST_CHANGED_PASSWORD bit
declare @CUR_ID_STATUT_EMAIL int
declare @CUR_EMAIL_CCI_LIST varchar(2000)
declare @ID_EXP_OLD varchar (50)

declare EXPERTS_cursor CURSOR FOR

select AtooCGA40..experts.ID_EXPERT,AtooCGA40..experts.ID_PERSONNE,AtooCGA40..experts.NUMERO_OEC,AtooCGA40..experts.DATE_INSCRIPTION_ORDRE,AtooCGA40..experts.DATE_RADIATION_ORDRE,AtooCGA40..experts.OBSERVATION,AtooCGA40..experts.ID_CASIER,AtooCGA40..experts.ID_TIERS_CLIENT,AtooCGA40..experts.ID_TIERS_FOURNISSEUR,AtooCGA40..experts.ID_STATUT_EXP,AtooCGA40..experts.HORODATAGE,AtooCGA40..experts.SYNCHRO_ID,DATE_ENTREE,DATE_SORTIE,
AtooCGA40..personnes.*  from AtooCGA40..experts 
left join AtooCGA40..personnes on AtooCGA40..personnes.id_personne = AtooCGA40..experts.id_personne 
where 
	AtooCGA40..experts.id_expert not in 
	(select distinct EXP_ID_EXPERT_SRC from AtooPivot.._EXP_COMMUNS where EXP_EXIST_IN_BOTH = 0 and EXP_EXIST_IN_SRC_ONLY = 1)
order by 1

OPEN EXPERTS_cursor

FETCH NEXT FROM EXPERTS_cursor
	INTO @CUR_ID_EXPERT,@CUR_ID_PERSONNE,@CUR_NUMERO_OEC,@CUR_DATE_INSCRIPTION_ORDRE,@CUR_DATE_RADIATION_ORDRE
		,@CUR_OBSERVATION,@CUR_ID_CASIER,@CUR_ID_TIERS_CLIENT,@CUR_ID_TIERS_FOURNISSEUR,@CUR_ID_STATUT_EXP
		,@CUR_HORODATAGE,@CUR_SYNCHRO_ID,@CUR_DATE_ENTREE,@CUR_DATE_SORTIE,@CUR_ID_PERSONNE,@CUR_ID_TITRE,@CUR_RAISON_SOCIALE,@CUR_NOM,@CUR_PRENOM,@CUR_TELEPHONE_FIXE_PERSO
		,@CUR_TELEPHONE_MOBILE_PERSO,@CUR_TELEPHONE_FAX_PERSO,@CUR_EMAIL_PERSO,@CUR_TYPE_PERSONNE,@CUR_ID_ADRESSE_PERSO
		,@CUR_DATE_NAISSANCE,@CUR_SITE_WEB,@CUR_LOGIN_CGA,@CUR_PASSWORD_CGA,@CUR_TELEPHONE_ALTERNATIVE_PERSO,@CUR_NOM_JEUNE_FILLE,@CUR_MUST_CHANGED_PASSWORD,@CUR_ID_STATUT_EMAIL,@CUR_EMAIL_CCI_LIST

WHILE @@FETCH_STATUS = 0
BEGIN

	declare @_ID_EXPERT as bigint
	declare @_ID_PERSONNE as bigint

-- Personnes 
	
	INSERT INTO #PERSONNES_TEMP
	(ID_TITRE, RAISON_SOCIALE, NOM,PRENOM, TELEPHONE_FIXE, TELEPHONE_MOBILE,TELEPHONE_FAX,EMAIL, TYPE_PERSONNE, ID_ADRESSE
		,DATE_NAISSANCE,SITE_WEB,LOGIN_CGA,PASSWORD_CGA,TELEPHONE_ALTERNATIVE, MUST_CHANGED_PASSWORD,ID_STATUT_EMAIL,EMAIL_CCI_LIST,is_AtooCGA40)
	VALUES
	(@CUR_ID_TITRE,@CUR_RAISON_SOCIALE,@CUR_NOM,@CUR_PRENOM,@CUR_TELEPHONE_FIXE_PERSO,@CUR_TELEPHONE_MOBILE_PERSO,@CUR_TELEPHONE_FAX_PERSO,@CUR_EMAIL_PERSO
		,@CUR_TYPE_PERSONNE ,null, @CUR_DATE_NAISSANCE, @CUR_SITE_WEB, null, null, @CUR_TELEPHONE_ALTERNATIVE_PERSO,@CUR_MUST_CHANGED_PASSWORD,@CUR_ID_STATUT_EMAIL,@CUR_EMAIL_CCI_LIST,1)
	
	set @_ID_PERSONNE = @@IDENTITY

-- Experts
	
	INSERT INTO #EXPERTS_TEMP
	(ID_PERSONNE,NUMERO_OEC,DATE_INSCRIPTION_ORDRE,DATE_RADIATION_ORDRE
	,OBSERVATION,ID_CASIER,ID_TIERS_CLIENT,ID_TIERS_FOURNISSEUR,ID_STATUT_EXP
	,HORODATAGE,SYNCHRO_ID,DATE_ENTREE,DATE_SORTIE,IS_AtooCGA40, ID_EXP_OLD) -- /!\ il faut mettre à jour le responsable du cabinet à jour avec nouveaux / anciens ID 
	values	
	(@_ID_PERSONNE, @CUR_NUMERO_OEC,@CUR_DATE_INSCRIPTION_ORDRE,@CUR_DATE_RADIATION_ORDRE
	,@CUR_OBSERVATION, 1, null, null, @CUR_ID_STATUT_EXP
	,null ,null, @CUR_DATE_ENTREE,@CUR_DATE_SORTIE, 1,  @CUR_ID_EXPERT)
	
	set @_ID_EXPERT = @@IDENTITY

--	J] FIN REQUETE INJECTION

FETCH NEXT FROM EXPERTS_cursor
	INTO @CUR_ID_EXPERT,@CUR_ID_PERSONNE,@CUR_NUMERO_OEC,@CUR_DATE_INSCRIPTION_ORDRE,@CUR_DATE_RADIATION_ORDRE
		,@CUR_OBSERVATION,@CUR_ID_CASIER,@CUR_ID_TIERS_CLIENT,@CUR_ID_TIERS_FOURNISSEUR,@CUR_ID_STATUT_EXP
		,@CUR_HORODATAGE,@CUR_SYNCHRO_ID,@CUR_DATE_ENTREE,@CUR_DATE_SORTIE,@CUR_ID_PERSONNE,@CUR_ID_TITRE,@CUR_RAISON_SOCIALE,@CUR_NOM,@CUR_PRENOM,@CUR_TELEPHONE_FIXE_PERSO
		,@CUR_TELEPHONE_MOBILE_PERSO,@CUR_TELEPHONE_FAX_PERSO,@CUR_EMAIL_PERSO,@CUR_TYPE_PERSONNE,@CUR_ID_ADRESSE_PERSO
		,@CUR_DATE_NAISSANCE,@CUR_SITE_WEB,@CUR_LOGIN_CGA,@CUR_PASSWORD_CGA,@CUR_TELEPHONE_ALTERNATIVE_PERSO,@CUR_NOM_JEUNE_FILLE,@CUR_MUST_CHANGED_PASSWORD,@CUR_ID_STATUT_EMAIL,@CUR_EMAIL_CCI_LIST

END

CLOSE EXPERTS_cursor
DEALLOCATE EXPERTS_cursor




--update #EXPERTS_TEMP set ID_CASIER = '38'-- where ID_CASIER is null

--select * from CASIERS_COURRIERS

BEGIN TRAN


--update #EXPERTS_TEMP set id_casier = 1 from #EXPERTS_TEMP where IS_AtooCGA40 = 1

--update #EXPERTS_TEMP set ID_TIERS_CLIENT = null 



SET IDENTITY_INSERT [AtooCGA40].[dbo].[PERSONNES] ON

INSERT INTO AtooCGA40..PERSONNES
	(ID_PERSONNE,ID_TITRE,RAISON_SOCIALE,NOM,PRENOM,TELEPHONE_FIXE,TELEPHONE_MOBILE,TELEPHONE_FAX,EMAIL,TYPE_PERSONNE,ID_ADRESSE
		,DATE_NAISSANCE,SITE_WEB,LOGIN_CGA,PASSWORD_CGA,TELEPHONE_ALTERNATIVE,NOM_JEUNE_FILLE,MUST_CHANGED_PASSWORD,ID_STATUT_EMAIL,EMAIL_CCI_LIST)
	SELECT ID_PERSONNE,ID_TITRE,RAISON_SOCIALE,NOM,PRENOM,TELEPHONE_FIXE,TELEPHONE_MOBILE,TELEPHONE_FAX,EMAIL,TYPE_PERSONNE,ID_ADRESSE
		,DATE_NAISSANCE,SITE_WEB,LOGIN_CGA,PASSWORD_CGA,TELEPHONE_ALTERNATIVE,NOM_JEUNE_FILLE,MUST_CHANGED_PASSWORD,ID_STATUT_EMAIL,EMAIL_CCI_LIST
	FROM #PERSONNES_TEMP
	WHERE IS_AtooCGA40 = 1

SET IDENTITY_INSERT [AtooCGA40].[dbo].[PERSONNES] OFF

SET IDENTITY_INSERT [AtooCGA40].[dbo].[EXPERTS] ON

INSERT INTO AtooCGA40..EXPERTS
	(ID_EXPERT,ID_PERSONNE,NUMERO_OEC,DATE_INSCRIPTION_ORDRE,DATE_RADIATION_ORDRE
	,OBSERVATION,ID_CASIER,ID_TIERS_CLIENT,ID_TIERS_FOURNISSEUR,ID_STATUT_EXP
	,HORODATAGE,SYNCHRO_ID,DATE_ENTREE,DATE_SORTIE,ID_EXP_OLD)
	SELECT ID_EXPERT,ID_PERSONNE,NUMERO_OEC,DATE_INSCRIPTION_ORDRE,DATE_RADIATION_ORDRE
	,OBSERVATION,ID_CASIER,ID_TIERS_CLIENT,ID_TIERS_FOURNISSEUR,ID_STATUT_EXP
	,HORODATAGE,SYNCHRO_ID,DATE_ENTREE,DATE_SORTIE,ID_EXP_OLD
	FROM #EXPERTS_TEMP
	WHERE IS_AtooCGA40 = 1

SET IDENTITY_INSERT [AtooCGA40].[dbo].[EXPERTS] OFF

update AtooCGA40..EXPERTS
set 
ID_EXP_OLD = ec.EXP_ID_EXPERT_SRC
from AtooCGA40..EXPERTS e
inner join AtooPivot.._EXP_COMMUNS ec on ec.EXP_ID_EXPERT_DST = e.ID_EXPERT and ec.EXP_EXIST_IN_BOTH = 1 and e.ID_EXP_OLD is null


-- ROLLBACK TRAN
-- COMMIT TRAN